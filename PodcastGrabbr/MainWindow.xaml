<Window x:Class="PodcastGrabbr.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">




    <Window.Resources>


        <!--<Style x:Key="BurgerButtonTest" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FFBFAAF5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            
                            <Rectangle Grid.Row="0" Fill="White" RadiusX="5" RadiusY="5"></Rectangle>
                            <Rectangle Grid.Row="1" Fill="Transparent"></Rectangle>
                            <Rectangle Grid.Row="2" Fill="White" RadiusX="5" RadiusY="5"></Rectangle>
                            <Rectangle Grid.Row="3" Fill="Transparent"></Rectangle>
                            <Rectangle Grid.Row="4" Fill="White" RadiusX="5" RadiusY="5"></Rectangle>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <SolidColorBrush x:Key="MenueBrush" Color="White" Opacity="0.3"/>
        <SolidColorBrush x:Key="MenueBrushPurple" Color="#463574" Opacity="1"/>

        <Style x:Key="MenueButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0" Fill="Transparent"/>
                                <!--<TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Text="Menüpunkt 1" Foreground="White" Margin="4,0,0,0"></TextBlock>-->
                                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="0" Text="{TemplateBinding Content}" Foreground="White" Margin="6,0,0,0"></TextBlock>
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Column="0" Fill="{StaticResource MenueBrush}" Height="1" Margin="0,0,-15,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#FFBFAAF5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" TargetName="Bd" Value="0.8"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BurgerButtonTest" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FFBFAAF5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <DockPanel>
                            <Border x:Name="Bd" BorderBrush="#463574" BorderThickness="2" CornerRadius="50" Background="#463574" SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="2*"/>
                                        <RowDefinition Height="3"/>
                                        <RowDefinition Height="2"/>
                                        <RowDefinition Height="3"/>
                                        <RowDefinition Height="2"/>
                                        <RowDefinition Height="3"/>
                                        <RowDefinition Height="2*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="25*"/>
                                        <ColumnDefinition Width="50*"/>
                                        <ColumnDefinition Width="25*"/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.Row="2" Grid.Column="0" Fill="Transparent" Height="2"></Rectangle>
                                    <Rectangle x:Name="Burger1" Grid.Row="1" Grid.Column="1" Fill="White" RadiusX="5" RadiusY="5" Height="3" HorizontalAlignment="Stretch"></Rectangle>
                                    <Rectangle Grid.Row="2" Grid.Column="2" Fill="Transparent" Height="2"></Rectangle>
                                    <Rectangle x:Name="Burger2" Grid.Row="3" Grid.Column="1" Fill="White" RadiusX="5" RadiusY="5" Height="3" HorizontalAlignment="Stretch"></Rectangle>
                                    <Rectangle Grid.Row="4" Grid.Column="4" Fill="Transparent" Height="2"></Rectangle>
                                    <Rectangle x:Name="Burger3" Grid.Row="5" Grid.Column="1" Fill="White" RadiusX="5" RadiusY="5" Height="3" HorizontalAlignment="Stretch"></Rectangle>
                                    <Rectangle Grid.Row="6" Grid.Column="6" Fill="Transparent" Height="2"></Rectangle>



                                </Grid>
                            </Border>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Bd" Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter TargetName="Bd" Property="Opacity" Value="0.4"/>
                            </Trigger>-->
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#FFBFAAF5"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFBFAAF5"/>
                                <Setter Property="Fill" TargetName="Burger1" Value="#463574"/>
                                <Setter Property="Fill" TargetName="Burger2" Value="#463574"/>
                                <Setter Property="Fill" TargetName="Burger3" Value="#463574"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <!--<Setter TargetName="Bd" Property="Opacity" Value="0.4"/>-->
                            </Trigger>
                            <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource myBrush}"/>
                                    <Setter Property="Opacity" Value="1"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="Black"/>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="ButtonVLeftTest" TargetType="{x:Type RepeatButton}">
            <Setter Property="Background" Value="#FFBFAAF5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Path Fill="{TemplateBinding Background}"
                            Data="M 0 -20 L 0 20 L -20 0 Z">
                            <!--Data="M 0 0 L 20 50 L 20 -50 Z">-->
                        </Path>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonVRightTest" TargetType="{x:Type RepeatButton}">
            <Setter Property="Background" Value="#FFBFAAF5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Path Fill="{TemplateBinding Background}"
                            Data="M 0 20 L 0 -20 L 20 0 Z">
                            <!--Data="M 0 0 L 20 50 L 20 -50 Z">
                             Data="M -20 50 L -20 -50 L 0 0 Z">-->
                        </Path>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <ControlTemplate x:Key="ScrollViewerWithButtons" TargetType="{x:Type ScrollViewer}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="90*"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>

                <RepeatButton Style="{StaticResource ButtonVLeftTest}"
                Grid.Column="0"
                VerticalAlignment="Center"
                              HorizontalAlignment="Right"
                Command="ScrollBar.LineLeftCommand"
                Content="Up" />

                <ScrollContentPresenter
                Grid.Column="1"
                CanContentScroll="{TemplateBinding CanContentScroll}" />

                <RepeatButton Style="{StaticResource ButtonVRightTest}"
                Grid.Column="2"
                VerticalAlignment="Center"
                              HorizontalAlignment="Left"
                Command="ScrollBar.LineRightCommand"
                Content="Down" />
            </Grid>
        </ControlTemplate>



        <Style x:Key="HorizontalStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <ScrollViewer Template="{StaticResource ScrollViewerWithButtons}" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden" CanContentScroll="True" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                            <StackPanel Orientation="Horizontal"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       IsItemsHost="True">

                            </StackPanel>
                        </ScrollViewer>
                    </ControlTemplate>


                </Setter.Value>
            </Setter>


            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="4*"></RowDefinition>
                                <RowDefinition Height="2*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Image Grid.Row="0" Source="{Binding ImageUri}" HorizontalAlignment="Stretch"></Image>
                            <WrapPanel Grid.Row="1" HorizontalAlignment="Center">
                                <TextBlock Text="{Binding Title}" HorizontalAlignment="Center" FontSize="10pt" Foreground="White" TextTrimming="CharacterEllipsis" TextWrapping="Wrap"></TextBlock>
                            </WrapPanel>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ShowItems" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Width" Value="150"></Setter>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" Background="Transparent">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="false">
                                <Setter TargetName="Border" Property="Opacity" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="20,0,20,0"/>
        </Style>

        <Style x:Key="HeadlineTb" TargetType="{x:Type TextBlock}">
            <Setter Property="Opacity" Value="0.7"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="FontSize" Value="10pt"></Setter>
        </Style>

        <Style x:Key="DetailTb" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="VerticalAlignment" Value="Top"></Setter>
            <Setter Property="FontSize" Value="10pt"></Setter>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
        </Style>










        <Style x:Key="ExpanderStyling" TargetType="{x:Type Expander}">

            <!--<Style.Triggers>
                <Trigger Property="IsExpanded" Value="true">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
                <Trigger Property="IsExpanded" Value="false">
                    <Setter Property="Opacity" Value="0.4"/>
                </Trigger>
            </Style.Triggers>-->
        </Style>








        <Style x:Key="EpisodeItems" TargetType="{x:Type ListBoxItem}">
            <!--<Setter Property="Width" Value="150"></Setter>
            <Setter Property="OverridesDefaultStyle" Value="true"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <!--<Border Name="Border" Background="Transparent">-->
                        <ContentPresenter />
                        <!--</Border>-->
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="false">
                                <Setter TargetName="Border" Property="Opacity" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Setter Property="Margin" Value="20,0,20,0"/>-->
        </Style>

        <DataTemplate x:Key="myHeaderTemplate">
            <DockPanel>
                <TextBlock FontSize="16" Foreground="DarkBlue">
                    <TextBlock.Text>
                        Title
                    </TextBlock.Text>
                </TextBlock>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="TitleCell">
            <DockPanel>
                <TextBlock Foreground="DarkBlue" HorizontalAlignment="Center">
                <TextBlock Text="{Binding Title}"></TextBlock>
            </TextBlock>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="PublishedCell">
            <DockPanel>
                <TextBlock Foreground="DarkBlue" HorizontalAlignment="Center">
                <TextBlock Text="{Binding PublishDate}"></TextBlock>
            </TextBlock>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="DownloadCell">
            <DockPanel>
                <Button Content="Download">
                </Button>
            </DockPanel>
        </DataTemplate>




        <SolidColorBrush x:Key="myBrush" Color="#FFBFAAF5" Opacity="0.4"/>


        <Style x:Key="EpisodeListViewStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
            <Setter Property="Focusable" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Top"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Top"></Setter>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">

                            <GridViewRowPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource myBrush}"/>
                                <Setter Property="Opacity" Value="1"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Black"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource myBrush}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Black"/>
                            </MultiTrigger>

                            <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource myBrush}"/>
                                <Setter Property="Opacity" Value="0.4"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Black"/>
                            </MultiTrigger>-->

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource myBrush}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Black"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="#FFBFAAF5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>




                    </ControlTemplate>
                </Setter.Value>




            </Setter>



            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>

                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="false">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="HeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#FF5A5193"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="CustomColumnHeaderControl" TargetType="{x:Type GridViewColumnHeader}">
                        <Grid>
                            <Border x:Name="HeaderBorder" BorderBrush="#FF5A5193" BorderThickness="0" Background="#FF5A5193">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="UpperHighlight" Fill="#FFBFAAF5" Visibility="Collapsed"/>
                                    <Rectangle Fill="#FF5A5193" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Stretch" Margin="-10,0,0,0"></Rectangle>
                                    <Rectangle Fill="#FF5A5193" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Stretch" Margin="0,-10,0,0"></Rectangle>
                                    <Border Padding="0" Grid.RowSpan="2">
                                        <ContentPresenter x:Name="HeaderContent" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    </Border>
                                </Grid>
                            </Border>
                            <Border x:Name="HeaderHoverBorder" BorderThickness="0" Margin="0"/>
                            <Border x:Name="HeaderPressBorder" BorderThickness="0" Margin="0"/>
                            <Canvas>
                                <Thumb x:Name="PART_HeaderGripper">
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Canvas.Right" Value="-9"/>
                                            <Setter Property="Width" Value="18"/>
                                            <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Setter Property="Padding" Value="7"/>
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                        <GradientStop Color="#FFBFAAF5" Offset="0"/>
                                                        <GradientStop Color="#FFBFAAF5" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border Background="Transparent" Padding="0">
                                                            <Rectangle Fill="{TemplateBinding Background}" Opacity="0.7" HorizontalAlignment="Center" Width="1"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="HeaderBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#FFBFAAF5" Offset="0"/>
                                            <GradientStop Color="#FFBFAAF5" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FFBFAAF5"/>
                                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                <!--<Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="HeaderBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#FFBFAAF5" Offset="0"/>
                                            <GradientStop Color="#FFBFAAF5" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FFBFAAF5"/>
                                <Setter Property="BorderBrush" TargetName="HeaderPressBorder" Value="#FFBFAAF5"/>
                                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                <Setter Property="Fill" TargetName="UpperHighlight" Value="#FFBFAAF5"/>
                                <!--<Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>-->
                                <Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
                
            </Setter>
            <!--<Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="40"/>-->
            <!--<Style.Triggers>-->
            <!--<Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF5A5193"/>
                </Trigger>-->
            <!--<Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#FF5A5193"/>
                    <Setter Property="BorderBrush" Value="#FF88CBEB"/>
                    <Setter Property="Visibility" Value="Visible"/>
                </Trigger>
            </Style.Triggers>-->

        </Style>

        <Style x:Key="HeaderStyleNonresizeable" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#FF5A5193"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="CustomColumnHeaderControl" TargetType="{x:Type GridViewColumnHeader}">
                        <Grid>
                            <Border x:Name="HeaderBorder" BorderBrush="#FF5A5193" BorderThickness="0" Background="#FF5A5193">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="UpperHighlight" Fill="#FFBFAAF5" Visibility="Collapsed"/>
                                    <Rectangle Fill="#FF5A5193" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Stretch" Margin="-10,0,0,0"></Rectangle>
                                    <Rectangle Fill="#FF5A5193" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Stretch" Margin="0,-10,0,0"></Rectangle>
                                    <Border Padding="0" Grid.RowSpan="2">
                                        <ContentPresenter x:Name="HeaderContent" 
                                                          ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                          Margin="0,0,0,1" RecognizesAccessKey="True" 
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                          VerticalAlignment="Center"
                                                          />
                                    </Border>
                                </Grid>
                            </Border>
                            <Border x:Name="HeaderHoverBorder" BorderThickness="0" Margin="0"/>
                            <Border x:Name="HeaderPressBorder" BorderThickness="0" Margin="0"/>
                            <Canvas>
                                <Thumb x:Name="PART_HeaderGripper">
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Canvas.Right" Value="-9"/>
                                            <Setter Property="Width" Value="18"/>
                                            <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Setter Property="Padding" Value="7"/>
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                        <GradientStop Color="#FFBFAAF5" Offset="0"/>
                                                        <GradientStop Color="#FFBFAAF5" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border Background="Transparent" Padding="0">
                                                            <Rectangle Fill="{TemplateBinding Background}" Opacity="0.7" HorizontalAlignment="Center" Width="1"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="HeaderBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#FFBFAAF5" Offset="0"/>
                                            <GradientStop Color="#FFBFAAF5" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FFBFAAF5"/>
                                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                <!--<Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="HeaderBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#FFBFAAF5" Offset="0"/>
                                            <GradientStop Color="#FFBFAAF5" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FFBFAAF5"/>
                                <Setter Property="BorderBrush" TargetName="HeaderPressBorder" Value="#FFBFAAF5"/>
                                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                <Setter Property="Fill" TargetName="UpperHighlight" Value="#FFBFAAF5"/>
                                <!--<Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>-->
                                <Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>
            <!--<Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="40"/>-->
            <!--<Style.Triggers>-->
            <!--<Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF5A5193"/>
                </Trigger>-->
            <!--<Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#FF5A5193"/>
                    <Setter Property="BorderBrush" Value="#FF88CBEB"/>
                    <Setter Property="Visibility" Value="Visible"/>
                </Trigger>
            </Style.Triggers>-->

        </Style>



    </Window.Resources>







    <Grid ShowGridLines="False">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <!--<ColumnDefinition Width="0.1*"></ColumnDefinition>-->
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>

        <!--<Rectangle x:Name="TestMenue" Fill="Gold" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Width="150" Visibility="Collapsed"></Rectangle>
        <Rectangle x:Name="MenueBackground" Fill="#FF5A5193" Grid.Row="0" Grid.RowSpan="2" Width="Auto"></Rectangle>-->
        <!--
        <Button x:Name="TestMenueButton" Height="20" Width="40" HorizontalAlignment="Left" VerticalAlignment="Top"
                Click="TestMenueButton_Click" Grid.Column="0" Grid.Row="0"></Button>-->


        <Grid ShowGridLines="False" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <!--<ColumnDefinition Width="0.1*"></ColumnDefinition>-->
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <!--<Rectangle Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2" Fill="#FF5A5193" />
            <Rectangle x:Name="TestMenue" Fill="#FF311855" Opacity="0.5" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2" Width="150" Visibility="Collapsed"></Rectangle>
            <Rectangle x:Name="MenueBackground" Fill="#FF5A5193" Grid.Row="0" Width="Auto" Grid.RowSpan="2"></Rectangle>-->
            <!--<Rectangle Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2" Fill="#FF5A5193" />-->



            <Grid ShowGridLines="False" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <!--<ColumnDefinition Width="0.1*"></ColumnDefinition>-->
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Rectangle x:Name="TestMenue" Fill="#FF5A5193" Opacity="1" Grid.Row="0" Grid.Column="0" Grid.RowSpan="7" Grid.ColumnSpan="2" Width="150" Visibility="Collapsed"></Rectangle>
                <Rectangle x:Name="MenueBackground" Fill="#FF5A5193" Grid.Row="0" Width="Auto" Grid.RowSpan="7"></Rectangle>
                <Button Style="{StaticResource BurgerButtonTest}" Height="30" Width="30" Grid.Row="0" Grid.Column="0" 
                    HorizontalAlignment="Left" VerticalAlignment="Top" Click="TestMenueButton_Click" 
                    Margin="2,10,0,0"></Button>

                <Button Grid.Row="1" Grid.Column="1" Style="{StaticResource MenueButton}" Width="auto" x:Name="MenueButton1" Visibility="Collapsed" Content="Meine Downloads"></Button>
                <Button Grid.Row="2" Grid.Column="1" Style="{StaticResource MenueButton}" Width="auto" x:Name="MenueButton2" Visibility="Collapsed" Content="Show importieren"></Button>
                <Button Grid.Row="3" Grid.Column="1" Style="{StaticResource MenueButton}" Width="auto" x:Name="MenueButton3" Visibility="Collapsed" Content="Shows aktualisieren"></Button>
                <Button Grid.Row="4" Grid.Column="1" Style="{StaticResource MenueButton}" Width="auto" x:Name="MenueButton4" Visibility="Collapsed" Content="Einstellungen"></Button>


            </Grid>
        </Grid>


        <!--<Grid Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
                <ColumnDefinition Width="80"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Rectangle Fill="#FF5A5193" Grid.Column="0" Grid.ColumnSpan="4"></Rectangle>
            <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" Foreground="White">Titel</TextBlock>
            <TextBlock Grid.Column="2" HorizontalAlignment="Stretch" Foreground="White">Erscheinungsdatum</TextBlock>
            <TextBlock Grid.Column="3" HorizontalAlignment="Stretch" Foreground="White">Download</TextBlock>
        </Grid>-->

        <Rectangle Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Fill="#FFBFAAF5"></Rectangle>


        <!--<ListBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Background="Transparent"  Name="episodeViewList" ItemContainerStyle="{StaticResource EpisodeItems}" Style="{StaticResource EpisodeListStyle}">

        </ListBox>-->
        <ListView BorderThickness="0" SelectionMode="Single" x:Name="EpisodeList" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                  ItemContainerStyle="{StaticResource EpisodeListViewStyle}" BorderBrush="#FFBFAAF5" Foreground="Black"
                  SizeChanged="HeaderContent_SizeChanged"
                  Loaded="ListView_Loaded">
            <ListView.View>
                <GridView ColumnHeaderContainerStyle="{StaticResource HeaderStyleNonresizeable}" AllowsColumnReorder="False">
                    <GridViewColumn Width="30">
                        <GridViewColumnHeader Style="{StaticResource HeaderStyleNonresizeable}"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Expander Margin="-5,2,-5000,0" HorizontalAlignment="Left" Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ItemsPresenter}}}"
                                         x:Name="lvExpander"
                                          VerticalAlignment="Center"
                                          Style="{StaticResource ExpanderStyling}"
                                          Foreground="Black"
                                    IsExpanded="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem, Mode=FindAncestor}}">
                                    <GroupBox Header="Beschreibung" VerticalAlignment="Top" Foreground="#FF311855" BorderThickness="0.5,0,0,0" BorderBrush="#FF311855">
                                        <TextBlock Text="{Binding Summary}" FontWeight="Normal" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Foreground="Black" MaxWidth="800" HorizontalAlignment="Left"/>
                                    </GroupBox>
                                </Expander>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <!--<GridViewColumn HeaderTemplate="{StaticResource myHeaderTemplate}" CellTemplate="{StaticResource TitleCell}"/>
                    <GridViewColumn HeaderTemplate="{StaticResource myHeaderTemplate}" CellTemplate="{StaticResource PublishedCell}"/>
                    <GridViewColumn HeaderTe6mplate="{StaticResource myHeaderTemplate}" CellTemplate="{StaticResource DownloadCell}"/>-->
                    <GridViewColumn Width="300">
                        <GridViewColumnHeader Content="Titel" Style="{StaticResource HeaderStyleNonresizeable}" MinWidth="300"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Margin="0,5,0,0" TextAlignment="Left" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Text="{Binding Title}" Foreground="Black">
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="auto">
                        <GridViewColumnHeader Content="Datum" Style="{StaticResource HeaderStyleNonresizeable}" HorizontalContentAlignment="Center"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Margin="0,5,0,0" TextAlignment="Left" VerticalAlignment="Center" Foreground="Black" Text="{Binding PublishDate}" Padding="0,0,8,0">
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="auto">
                        <GridViewColumnHeader Content="Media" Style="{StaticResource HeaderStyleNonresizeable}" HorizontalContentAlignment="Center"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border Padding="0,0,8,0" BorderThickness="0">
                                <Button Margin="0,3,0,0" VerticalAlignment="Center" Content="Download" Width="70">
                                </Button>
                                </Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>



        <!-- ^^^^^^^^^^Bottom List -->


        <Rectangle Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Fill="#FF5A5193" />

        <Grid Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0">
            <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="10*"></ColumnDefinition>
                <ColumnDefinition Width="90*"></ColumnDefinition>
                <ColumnDefinition Width="10*"></ColumnDefinition>
            </Grid.ColumnDefinitions>-->
            <Grid.RowDefinitions>
                <RowDefinition Height="5*"></RowDefinition>
                <RowDefinition Height="60*"></RowDefinition>
                <RowDefinition Height="35*"></RowDefinition>
            </Grid.RowDefinitions>
            <!--<Button Style="{StaticResource ButtonVLeft}" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,55,0,0"></Button>
            <Button Style="{StaticResource ButtonVRight}" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,55,10,0"></Button>-->

            <!--ShowViewList-->
            <ListBox Name="showViewList" Grid.Row="1" BorderThickness="0" Background="#FF5A5193" HorizontalAlignment="Stretch"
                     VerticalAlignment="Center" ItemContainerStyle="{StaticResource ShowItems}" Style="{StaticResource HorizontalStyle}"
                     
>
            </ListBox>
            <!--ShowViewList-->

            <Grid Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition Width="10*"></ColumnDefinition>
                    <ColumnDefinition Width="10*"></ColumnDefinition>
                    <ColumnDefinition Width="20*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="15" MaxHeight="100"></RowDefinition>
                    <RowDefinition Height="20" MaxHeight="100"></RowDefinition>
                    <RowDefinition Height="15" MaxHeight="100"></RowDefinition>
                    <RowDefinition Height="20" MaxHeight="100"></RowDefinition>
                    <RowDefinition Height="15" MaxHeight="100"></RowDefinition>
                    <RowDefinition Height="20" MaxHeight="100"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Rectangle Grid.ColumnSpan="7" Grid.RowSpan="8" Fill="#FF311855" Opacity="0.5"></Rectangle>
                <TextBlock Grid.Column="1" Grid.Row="0" Style="{StaticResource HeadlineTb}">Publisher</TextBlock>
                <TextBlock Grid.Column="1" Grid.Row="1" Style="{StaticResource DetailTb}" TextWrapping="NoWrap" Text="{Binding ElementName=showViewList, Path=SelectedItem.Publisher}"></TextBlock>
                <TextBlock Grid.Column="2" Grid.Row="0" Style="{StaticResource HeadlineTb}">Podcast-Titel</TextBlock>
                <TextBlock Grid.Column="2" Grid.Row="1" Style="{StaticResource DetailTb}" TextWrapping="NoWrap" Text="{Binding ElementName=showViewList, Path=SelectedItem.Title}"></TextBlock>
                <TextBlock Grid.Column="3" Grid.Row="0" Style="{StaticResource HeadlineTb}">Beschreibung</TextBlock>
                <TextBlock Grid.Column="3" Grid.Row="1" Grid.RowSpan="3" Style="{StaticResource DetailTb}" TextWrapping="Wrap" Text="{Binding ElementName=showViewList, Path=SelectedItem.Description}"></TextBlock>
                <TextBlock Grid.Column="1" Grid.Row="2" Style="{StaticResource HeadlineTb}">Letztes Update</TextBlock>
                <TextBlock Grid.Column="1" Grid.Row="3" Style="{StaticResource DetailTb}" TextWrapping="NoWrap" Text="{Binding ElementName=showViewList, Path=SelectedItem.LastUpdated}"></TextBlock>
            </Grid>




        </Grid>
    </Grid>
</Window>
