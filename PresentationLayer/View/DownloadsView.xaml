<Page x:Class="PresentationLayer.View.DownloadsView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:PresentationLayer.View"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="DownloadsView">

    <Page.Resources>

        <SolidColorBrush x:Key="WindowBackground" Color="#FF5A5193" Opacity="1"/>
        <SolidColorBrush x:Key="WindowBackgroundTranslucent" Color="#FF5A5193" Opacity="0.3"/>
        <SolidColorBrush x:Key="DownloadBrush" Color="#FF311855" Opacity="1"/>
        <SolidColorBrush x:Key="DownloadBrushTranslucent" Color="#FF311855" Opacity="0.7"/>
        <SolidColorBrush x:Key="myBrush" Color="#FFBFAAF5" Opacity="1"/>
        <SolidColorBrush x:Key="myBrush2" Color="#FFBFAAF5" Opacity="0.7"/>
        <SolidColorBrush x:Key="myBrush3" Color="#FFD3B9F1" Opacity="1"/>
        <SolidColorBrush x:Key="DownloadBrushHighlight" Color="#FF6F509C" Opacity="1"/>
        <SolidColorBrush x:Key="RedBrush" Color="Red" Opacity="0.45"/>
        <SolidColorBrush x:Key="RedBrushBright2" Color="#FFB01B1B" Opacity="1"/>
        <SolidColorBrush x:Key="RedBrushBright" Color="Red" Opacity="1"/>
        <SolidColorBrush x:Key="GreenBrush" Color="Green" Opacity="0.6"/>
        <SolidColorBrush x:Key="GreenBrushBright" Color="Green" Opacity="1"/>
        <SolidColorBrush x:Key="GreenBrushPlay" Color="#FF1BA61B" Opacity="1"/>
        <SolidColorBrush x:Key="GreenBrushPlayTranslucent" Color="Green" Opacity="0.8"/>
        <SolidColorBrush x:Key="WhiteTranslucent" Color="White" Opacity="0.8"/>

        <Style x:Key="EpisodeTb" TargetType="{x:Type TextBlock}">
            <Setter Property="Opacity" Value="1"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="FontSize" Value="10pt"></Setter>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        </Style>

        <Style x:Key="PlayButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="Circle" Fill="{StaticResource GreenBrushBright}" RadiusX="30" RadiusY="30" Width="20"></Rectangle>
                                <Path x:Name="Triangle" Fill="White" Data="M 16 10 L 7 3 L 7 17 Z"/>
                                <!--<Path Fill="White" Data="M 9 11 L 0 2 L 2 0 L 11 9"/>-->
                                <TextBlock x:Name="ButtonText" Grid.Column="1" Text="Abspielen" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource EpisodeTb}"></TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Circle" Value="{StaticResource GreenBrushPlay}"/>
                                <Setter TargetName="ButtonText" Property="Foreground" Value="#FF4D4D4D"/>
                                <!--<Setter Property="Opacity" TargetName="Triangle" Value=""/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" TargetName="Bd" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Hidden"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DeleteButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="Circle" Fill="{StaticResource RedBrushBright2}" RadiusX="30" RadiusY="30" Width="20"></Rectangle>
                                <Path x:Name="TopLeftToBottomRight" Fill="White" Data="M 3 5 L 15 17 L 17 15 L 5 3 Z"/>
                                <Path x:Name="TopRightToBottomLeft" Fill="White" Data="M 3 15 L 15 3 L 17 5 L 5 17 Z"/>
                                <TextBlock x:Name="ButtonText" Grid.Column="1" Text="Löschen" HorizontalAlignment="Center" 
                                           VerticalAlignment="Center" Style="{StaticResource EpisodeTb}"></TextBlock>
                                <!--<Path Fill="White" Data="M 9 11 L 0 2 L 2 0 L 11 9"/>-->
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Circle" Value="{StaticResource RedBrushBright}"/>
                                <Setter TargetName="ButtonText" Property="Foreground" Value="#FF4D4D4D"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" TargetName="Bd" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Hidden"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style x:Key="DeleteButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Height="15" Width="auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="WarningBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RadiusX="10" RadiusY="10" 
                                           Height="15" Width="15" Fill="{StaticResource RedBrush}"></Rectangle>
                                <Grid Width="11" Height="11">
                                    <Path Fill="White" Data="M 9 11 L 0 2 L 2 0 L 11 9"/>
                                    <Path Fill="White" Data="M 9 0 L 0 9 L 2 11 L 11 2 Z"/>
                                </Grid>
                                <TextBlock x:Name="ButtonDescription" Text="Show entfernen" Grid.Column="1" Style="{StaticResource HeadlineTb}" 
                                           HorizontalAlignment="Left" VerticalAlignment="Center"
                                           FontSize="13"></TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="WarningBorder" Value="{StaticResource RedBrushBright}"/>
                                <Setter Property="Opacity" TargetName="ButtonDescription" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" TargetName="Bd" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Hidden"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style x:Key="ExpandButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" Opacity="0.85">
                            <Grid>
                                <Path x:Name="VerticalLine" Data="M 8 0 L 8 20 L 12 20 L 12 0 Z" Fill="White"/>
                                <Path x:Name="HorizontalLine" Data="M 0 8 L 20 8 L 20 12 L 0 12 Z" Fill="White"/>
                                <!--<Path Fill="White" Data="M 9 11 L 0 2 L 2 0 L 11 9"/>-->
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Fill" TargetName="VerticalLine" Value="{StaticResource DownloadBrushTranslucent}"/>
                                <Setter Property="Fill" TargetName="HorizontalLine" Value="{StaticResource DownloadBrushTranslucent}"/>-->
                                <Setter TargetName="Bd" Property="Opacity" Value="1"/>
                                <!--<Setter Property="Opacity" TargetName="Triangle" Value=""/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" TargetName="Bd" Value="0.9"/>
                                <Setter TargetName="VerticalLine" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Hidden"></Setter>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HeadlineTb" TargetType="{x:Type TextBlock}">
            <Setter Property="Opacity" Value="1"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="FontSize" Value="10pt"></Setter>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        </Style>



        <Style x:Key="Episode2Tb" TargetType="{x:Type TextBlock}">
            <Setter Property="Opacity" Value="1"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="FontSize" Value="10pt"></Setter>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        </Style>


        <ControlTemplate x:Key="ExpanderControlTemplate2" TargetType="{x:Type Expander}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" SnapsToDevicePixels="True">
                <DockPanel>
                    <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" 
                                  Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" 
                                  FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" 
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                  Margin="0" MinWidth="0" MinHeight="0" 
                                  Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        <ToggleButton.FocusVisualStyle>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border>
                                                <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.FocusVisualStyle>
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" 
                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="0" 
                                                                      RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                    <Path Margin="2,2,0,0" x:Name="PlusSign" Data="M 8 0 L 12 0 L 12 8 L 20 8 L 20 12 L 12 12 L 12 20 L 8 20 L 8 12 L 0 12 L 0 8 L 8 8 Z" 
                                                          Fill="{StaticResource WhiteTranslucent}" Stroke="Black" StrokeThickness="2"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="PlusSign" Value="M 0 8 L 20 8 L 20 12 L 0 12 Z"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <!--<Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>-->
                                                    <!--<Setter Property="Stroke" TargetName="arrow" Value="Black"/>-->
                                                    <Setter Property="Fill" TargetName="PlusSign" Value="White"/>
                                                    <Setter Property="Stroke" TargetName="PlusSign" Value="{StaticResource DownloadBrushTranslucent}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <!--<Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>-->
                                                    <!--<Setter Property="Stroke" TargetName="arrow" Value="Black"/>-->
                                                    <Setter Property="Opacity" TargetName="PlusSign" Value="0.8"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <!--<Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>-->
                                                    <!--<Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>-->
                                                    <Setter Property="Fill" TargetName="PlusSign" Value="White"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                </Trigger>
                <!--<Trigger Property="ExpandDirection" Value="Right">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="19"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="-90"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Up">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="19"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="180"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Left">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="19"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="90"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>-->
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ShowItems" TargetType="{x:Type ListBoxItem}">
            <!--<Setter Property="Width" Value="150"></Setter>-->
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" Background="{StaticResource DownloadBrush}" BorderBrush="White" BorderThickness="0,0,0,1" CornerRadius="0">
                            <ContentPresenter x:Name="ListBoxContent" Margin="0"/>
                        </Border>
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="ListBoxContent" Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="false">
                                <Setter TargetName="ListBoxContent" Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ListBoxContent" Property="Opacity" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="RequestBringIntoView" Handler="ListBoxItem_RequestBringIntoView">
            </EventSetter>
        </Style>


        <Style x:Key="EpisodeItems" TargetType="{x:Type ListBoxItem}">
            <!--<Setter Property="Width" Value="150"></Setter>-->
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" Background="White" BorderBrush="White" CornerRadius="0">
                            <ContentPresenter x:Name="ListBoxContent" Margin="0"/>
                        </Border>
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="ListBoxContent" Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="false">
                                <Setter TargetName="ListBoxContent" Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ListBoxContent" Property="Opacity" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="RequestBringIntoView" Handler="ListBoxItem_RequestBringIntoView">
            </EventSetter>
        </Style>

        <Style x:Key="EpisodeListStyle" TargetType="{x:Type ListBox}">
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border BorderThickness="0,1,0,0" BorderBrush="Black" SnapsToDevicePixels="True" x:Name="Bd" Background="Transparent">
                            <Grid Margin="3,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto" MinWidth="10"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="16"/>
                                    <RowDefinition Height="auto" MaxHeight="16"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <!--<WrapPanel>-->
                                <DockPanel Grid.Column="0" Grid.Row="0">
                                    <TextBlock x:Name="EpisodeTitle" Text="{Binding Title}" Style="{StaticResource EpisodeTb}" FontWeight="Medium"></TextBlock>
                                </DockPanel>
                                <DockPanel Grid.Column="1" Grid.Row="0">
                                    <TextBlock Text="{Binding PublishDate}" Style="{StaticResource EpisodeTb}"
                                                                               HorizontalAlignment="Right" FontWeight="Medium"></TextBlock>
                                </DockPanel>
                                <!--<DockPanel Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" MinWidth="100" HorizontalAlignment="Left" VerticalAlignment="Stretch">-->

                                <TextBlock Text="{Binding Summary}" TextTrimming="WordEllipsis" VerticalAlignment="Stretch"
                                                                       Grid.Row="1" Grid.RowSpan="2" TextWrapping="WrapWithOverflow" MaxHeight="32"/>
                                <!--</DockPanel>-->
                                <DockPanel Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="4" VerticalAlignment="Top" Margin="0,5,0,5">
                                    <Button Style="{StaticResource PlayButton}" HorizontalAlignment="Left" VerticalAlignment="Top" 
                                            Command="{Binding DataContext.PlayEpisode, RelativeSource={RelativeSource AncestorType=Page, AncestorLevel=1}}" 
                                            CommandParameter="{Binding}"/>
                                    <Button Style="{StaticResource DeleteButton}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                </DockPanel>
                                <!--</WrapPanel>-->
                            </Grid>
                        </Border>

                        <DataTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource WindowBackgroundTranslucent}"/>
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <ControlTemplate x:Key="ListBoxControlTemplate1" TargetType="{x:Type ListBox}">
            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                    Padding="1" SnapsToDevicePixels="True">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="Bd" Value="White"/>
                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FFD9D9D9"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="True"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>



        <Style x:Key="ShowListStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>

                        <Border>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="ShowRow"></RowDefinition>
                                    <RowDefinition x:Name="EpisodeRow"></RowDefinition>
                                </Grid.RowDefinitions>


                                <Expander HorizontalAlignment="Left" Background="{StaticResource DownloadBrush}" 
                                          Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ItemsPresenter}}}"
                                          x:Name="EpisodeExpander" Grid.Row="0"
                                          VerticalAlignment="Center" Padding="0,0,0,0" Margin="0,0,0,0"
                                          Foreground="Black" BorderThickness="0"
                                          HorizontalContentAlignment="Stretch" Template="{DynamicResource ExpanderControlTemplate2}">

                                    <!--IsExpanded="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"-->

                                    <!--IsExpanded="{Binding Mode=TwoWay, Path=IsSelected, 
                                    RelativeSource={RelativeSource AncestorType=ListBoxItem, Mode=FindAncestor}}"-->
                                    <Expander.Header>
                                        <WrapPanel Grid.Row="0" Background="{StaticResource DownloadBrush}" x:Name="ShowPanel">

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto" x:Name="ImageColumn"/>
                                                    <ColumnDefinition Width="*" x:Name="ShowColumn"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="100"></RowDefinition>
                                                </Grid.RowDefinitions>

                                                <Image x:Name="Default" Grid.Row="0" Grid.Column="0">
                                                    <Image.Source>
                                                        <DrawingImage>
                                                            <DrawingImage.Drawing>
                                                                <GeometryDrawing>
                                                                    <GeometryDrawing.Geometry>
                                                                        <GeometryGroup>

                                                                            <GeometryCollection>
                                                                                <PathGeometry Figures="M 0 0 L 20 20"></PathGeometry>
                                                                                <PathGeometry Figures="M 0 20 L 20 0"></PathGeometry>
                                                                            </GeometryCollection>
                                                                        </GeometryGroup>
                                                                    </GeometryDrawing.Geometry>
                                                                    <GeometryDrawing.Pen>
                                                                        <Pen Thickness="4" Brush="{StaticResource RedBrush}" />
                                                                    </GeometryDrawing.Pen>
                                                                </GeometryDrawing>
                                                            </DrawingImage.Drawing>
                                                        </DrawingImage>
                                                    </Image.Source>
                                                </Image>

                                                <!--<Image x:Name="ShowImage" Grid.Row="0" Grid.Column="0">
                                                    <Image.Source>
                                                        <BitmapImage DecodePixelWidth="100" DecodePixelHeight="100" 
                                                 UriSource="{Binding ImageUri}">
                                                        </BitmapImage>
                                                    </Image.Source>
                                                </Image>-->

                                                <!--<Image x:Name="ShowImage" Grid.Row="0" Grid.Column="0" Stretch="Fill" Source="{Binding ShowInfo.ImageUri, Converter={StaticResource UriToThumbnail}}">-->
                                                <Image x:Name="ShowImage" Grid.Row="0" Grid.Column="0">
                                                    <Image.Source>
                                                        <BitmapImage
                                                            UriSource="{Binding ShowInfo.ImageUri}" DecodePixelHeight="100" DecodePixelWidth="100"  >
                                                        </BitmapImage>
                                                    </Image.Source>
                                                </Image>

                                                <!--<Button x:Name="Expander" Grid.Row="0" Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left" Height="30" Width="30"
                                                        Style="{StaticResource ExpandButton}">
                                                </Button>-->

                                                <Grid Grid.Column="1" HorizontalAlignment="Stretch">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Padding="5,0,0,0" Grid.Row="0" VerticalAlignment="Center" Foreground="White" Style="{StaticResource HeadlineTb}"
                                                               Text="{Binding ShowInfo.PodcastTitle}"></TextBlock>
                                                    <TextBlock Padding="5,0,0,0"  Grid.Row="1" VerticalAlignment="Center" Foreground="White"  Style="{StaticResource HeadlineTb}"
                                                               Text="{Binding ShowInfo.PublisherName}"></TextBlock>
                                                    <TextBlock Padding="5,0,0,0"  Grid.Row="2" VerticalAlignment="Center" Foreground="White"  Style="{StaticResource HeadlineTb}"
                                                               Text="{Binding ShowInfo.Description}"></TextBlock>
                                                    <TextBlock Padding="5,0,0,0"  Grid.Row="3" VerticalAlignment="Center" Foreground="White"  Style="{StaticResource HeadlineTb}"
                                                               Text="{Binding ShowInfo.LastUpdated}"></TextBlock>
                                                </Grid>
                                            </Grid>
                                        </WrapPanel>
                                    </Expander.Header>
                                    <Expander.Content>

                                        <!--<ListBox Style="{StaticResource EpisodeListStyle}" ItemsSource="{Binding EpisodeList}" 
                                                 ItemContainerStyle="{StaticResource EpisodeItems}" Template="{DynamicResource ListBoxControlTemplate1}"
                                                 SelectedItem="{Binding SelectedEpisode, Mode=TwoWay}"></ListBox>-->

                                        <ItemsControl ItemsSource="{Binding EpisodeList}" Background="White" Grid.Column="0" 
                                                      HorizontalContentAlignment="Stretch" Grid.IsSharedSizeScope="True" Margin="4,0,0,0">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>

                                                    <Border BorderThickness="0,1,0,0" BorderBrush="Black" SnapsToDevicePixels="True" x:Name="Bd" Background="Transparent">
                                                        <Grid Margin="3,0,0,0">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="auto"/>
                                                                <ColumnDefinition Width="auto" MinWidth="10"/>
                                                                <ColumnDefinition Width="auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition Height="16"/>
                                                                <RowDefinition Height="auto" MaxHeight="16"/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>


                                                            <DockPanel Grid.Column="0" Grid.Row="0">
                                                                <TextBlock Text="{Binding Title}" Style="{StaticResource EpisodeTb}" FontWeight="Medium"></TextBlock>
                                                            </DockPanel>
                                                            <DockPanel Grid.Column="1" Grid.Row="0">
                                                                <TextBlock Text="{Binding PublishDate}" Style="{StaticResource EpisodeTb}"
                                                                               HorizontalAlignment="Right" FontWeight="Medium"></TextBlock>
                                                            </DockPanel>


                                                            <TextBlock Text="{Binding Summary}" TextTrimming="WordEllipsis" VerticalAlignment="Stretch"
                                                                       Grid.Row="1" Grid.RowSpan="2" TextWrapping="WrapWithOverflow" MaxHeight="32"/>

                                                            <DockPanel Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="4" VerticalAlignment="Top" Margin="0,5,0,5">
                                                                <Button Style="{StaticResource PlayButton}"
                                                                        Command="{Binding DataContext.PlayEpisode, RelativeSource={RelativeSource AncestorType=Page, AncestorLevel=1}}" 
                                                                        CommandParameter="{Binding}"/>
                                                                        
                                                                        <!--Command="{Binding PlayEpisode}"
                                                                        CommandParameter="{Binding}" HorizontalAlignment="Left" VerticalAlignment="Top"/>-->
                                                                <Button Style="{StaticResource DeleteButton}" HorizontalAlignment="Left" VerticalAlignment="Top"
                                                                        Command="{Binding DataContext.DeleteEpisode, RelativeSource={RelativeSource AncestorType=Page, AncestorLevel=1}}" 
                                                                        CommandParameter="{Binding}"/>
                                                            </DockPanel>

                                                        </Grid>
                                                    </Border>

                                                    <DataTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource WindowBackgroundTranslucent}"/>
                                                        </Trigger>
                                                    </DataTemplate.Triggers>

                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>


                                        <!--HIER EPISODENSAMMLUNG DARSTELLEN
                                                                HIER EPISODENSAMMLUNG DARSTELLEN-->


                                        <!--HIER EPISODENSAMMLUNG DARSTELLEN
                                                                HIER EPISODENSAMMLUNG DARSTELLEN-->
                                        <!--HIER EPISODENSAMMLUNG DARSTELLEN
                                                                HIER EPISODENSAMMLUNG DARSTELLEN-->


                                    </Expander.Content>


                                </Expander>
                            </Grid>


                        </Border>





                    </DataTemplate>
                </Setter.Value>
            </Setter>

        </Style>


    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="10"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="10"></RowDefinition>
        </Grid.RowDefinitions>
        <Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2" Fill="{DynamicResource WindowBackground}"></Rectangle>
        <Rectangle Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Fill="{DynamicResource WindowBackground}"></Rectangle>

        <ListBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Style="{StaticResource ShowListStyle}" ItemsSource="{Binding Podcasts}"
                 ScrollViewer.CanContentScroll="False" ScrollViewer.VerticalScrollBarVisibility="Auto" ItemContainerStyle="{StaticResource ShowItems}"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
        </ListBox>












    </Grid>

</Page>
