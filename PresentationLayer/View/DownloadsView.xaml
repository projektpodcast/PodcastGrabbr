<Page x:Class="PresentationLayer.View.DownloadsView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:PresentationLayer.View"
      xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="DownloadsView">

    <Page.Resources>

        <!--#region Button Styles-->
        <!--#region PlayButton-->
        <Style x:Key="PlayButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="Circle" Fill="{StaticResource GreenBrushBright}" RadiusX="30" RadiusY="30" Width="20"></Rectangle>
                                <Path x:Name="Triangle" Fill="White" Data="M 16 10 L 7 3 L 7 17 Z"/>
                                <TextBlock x:Name="ButtonText" Grid.Column="1" Text="Abspielen" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource EpisodeTb}"></TextBlock>
                            </Grid>
                        </Border>
                        <!--#region Triggers-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Circle" Value="{StaticResource GreenBrushPlay}"/>
                                <Setter TargetName="ButtonText" Property="Foreground" Value="#FF4D4D4D"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" TargetName="Bd" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Hidden"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        <!--#endregion-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region DeleteButton-->
        <Style x:Key="DeleteButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="Circle" Fill="{StaticResource RedBrushBright2}" RadiusX="30" RadiusY="30" Width="20"></Rectangle>
                                <Path x:Name="TopLeftToBottomRight" Fill="White" Data="M 3 5 L 15 17 L 17 15 L 5 3 Z"/>
                                <Path x:Name="TopRightToBottomLeft" Fill="White" Data="M 3 15 L 15 3 L 17 5 L 5 17 Z"/>
                                <TextBlock x:Name="ButtonText" Grid.Column="1" Text="Löschen" HorizontalAlignment="Center" 
                                           VerticalAlignment="Center" Style="{StaticResource EpisodeTb}"></TextBlock>
                                <!--<Path Fill="White" Data="M 9 11 L 0 2 L 2 0 L 11 9"/>-->
                            </Grid>
                        </Border>
                        <!--#region Triggers-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Circle" Value="{StaticResource RedBrushBright}"/>
                                <Setter TargetName="ButtonText" Property="Foreground" Value="#FF4D4D4D"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" TargetName="Bd" Value="0.6"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Hidden"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        <!--#endregion-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region ExpandButton-->
        <Style x:Key="ExpandButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" Opacity="0.85">
                            <Grid>
                                <Path x:Name="VerticalLine" Data="M 8 0 L 8 20 L 12 20 L 12 0 Z" Fill="White"/>
                                <Path x:Name="HorizontalLine" Data="M 0 8 L 20 8 L 20 12 L 0 12 Z" Fill="White"/>
                                <!--<Path Fill="White" Data="M 9 11 L 0 2 L 2 0 L 11 9"/>-->
                            </Grid>
                        </Border>
                        <!--#region Triggers-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter Property="Fill" TargetName="VerticalLine" Value="{StaticResource DownloadBrushTranslucent}"/>
                                <Setter Property="Fill" TargetName="HorizontalLine" Value="{StaticResource DownloadBrushTranslucent}"/>-->
                                <Setter TargetName="Bd" Property="Opacity" Value="1"/>
                                <!--<Setter Property="Opacity" TargetName="Triangle" Value=""/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" TargetName="Bd" Value="0.9"/>
                                <Setter TargetName="VerticalLine" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Hidden"></Setter>
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                        <!--#endregion-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#endregion-->


        <!--#region Definitionen für ShowList-->
        <!--#region ListBoxItem Style für ShowList-->
        <Style x:Key="ShowItems" TargetType="{x:Type ListBoxItem}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" Background="{StaticResource PrimaryColor}" BorderBrush="Black" BorderThickness="0,0,0,1" CornerRadius="0">
                            <ContentPresenter x:Name="ListBoxContent" Margin="0"/>
                        </Border>
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="ListBoxContent" Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="false">
                                <Setter TargetName="ListBoxContent" Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ListBoxContent" Property="Opacity" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="RequestBringIntoView" Handler="ListBoxItem_RequestBringIntoView">
            </EventSetter>
        </Style>
        <!--#endregion-->
        <!--#region ListStyle für ShowList-->
        <Style x:Key="ShowListStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="ShowRow"></RowDefinition>
                                    <RowDefinition x:Name="EpisodeRow"></RowDefinition>
                                </Grid.RowDefinitions>


                                <Expander HorizontalAlignment="Left" Background="{StaticResource PrimaryDark}" 
                                          Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ItemsPresenter}}}"
                                          x:Name="EpisodeExpander" Grid.Row="0"
                                          VerticalAlignment="Center" Padding="0,0,0,0" Margin="0,0,0,0"
                                          Foreground="Black" BorderThickness="0"
                                          HorizontalContentAlignment="Stretch" Template="{DynamicResource ShowExpanderTemplate}">
                                    <Expander.Header>
                                        <WrapPanel Grid.Row="0" Background="{StaticResource PrimaryDark}" x:Name="ShowPanel">

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto" x:Name="ImageColumn"/>
                                                    <ColumnDefinition Width="*" x:Name="ShowColumn"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="100"></RowDefinition>
                                                </Grid.RowDefinitions>

                                                <Image x:Name="Default" Grid.Row="0" Grid.Column="0">
                                                    <Image.Source>
                                                        <DrawingImage>
                                                            <DrawingImage.Drawing>
                                                                <GeometryDrawing>
                                                                    <GeometryDrawing.Geometry>
                                                                        <GeometryGroup>

                                                                            <GeometryCollection>
                                                                                <PathGeometry Figures="M 0 0 L 20 20"></PathGeometry>
                                                                                <PathGeometry Figures="M 0 20 L 20 0"></PathGeometry>
                                                                            </GeometryCollection>
                                                                        </GeometryGroup>
                                                                    </GeometryDrawing.Geometry>
                                                                    <GeometryDrawing.Pen>
                                                                        <Pen Thickness="4" Brush="{StaticResource RedBrush}" />
                                                                    </GeometryDrawing.Pen>
                                                                </GeometryDrawing>
                                                            </DrawingImage.Drawing>
                                                        </DrawingImage>
                                                    </Image.Source>
                                                </Image>

                                                <!--<Image x:Name="ShowImage" Grid.Row="0" Grid.Column="0">
                                                    <Image.Source>
                                                        <BitmapImage DecodePixelWidth="100" DecodePixelHeight="100" 
                                                 UriSource="{Binding ImageUri}">
                                                        </BitmapImage>
                                                    </Image.Source>
                                                </Image>-->

                                                <!--<Image x:Name="ShowImage" Grid.Row="0" Grid.Column="0" Stretch="Fill" Source="{Binding ShowInfo.ImageUri, Converter={StaticResource UriToThumbnail}}">-->
                                                <Image x:Name="ShowImage" Grid.Row="0" Grid.Column="0">
                                                    <Image.Source>
                                                        <BitmapImage
                                                            UriSource="{Binding ShowInfo.ImageUri}" DecodePixelHeight="100" DecodePixelWidth="100"  >
                                                        </BitmapImage>
                                                    </Image.Source>
                                                </Image>

                                                <!--<Button x:Name="Expander" Grid.Row="0" Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left" Height="30" Width="30"
                                                        Style="{StaticResource ExpandButton}">
                                                </Button>-->

                                                <Grid Grid.Column="1" HorizontalAlignment="Stretch">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Padding="5,0,0,0" Grid.Row="0" VerticalAlignment="Center" Foreground="White" Style="{StaticResource HeadlineTb}"
                                                               Text="{Binding ShowInfo.PodcastTitle}"></TextBlock>
                                                    <TextBlock Padding="5,0,0,0"  Grid.Row="1" VerticalAlignment="Center" Foreground="White"  Style="{StaticResource HeadlineTb}"
                                                               Text="{Binding ShowInfo.PublisherName}"></TextBlock>
                                                    <TextBlock Padding="5,0,0,0"  Grid.Row="2" VerticalAlignment="Center" Foreground="White"  Style="{StaticResource HeadlineTb}"
                                                               Text="{Binding ShowInfo.Description}"></TextBlock>
                                                    <TextBlock Padding="5,0,0,0"  Grid.Row="3" VerticalAlignment="Center" Foreground="White"  Style="{StaticResource HeadlineTb}"
                                                               Text="{Binding ShowInfo.LastUpdated}"></TextBlock>
                                                </Grid>
                                            </Grid>
                                        </WrapPanel>
                                    </Expander.Header>
                                    <Expander.Content>
                                        <ItemsControl ItemsSource="{Binding EpisodeList}" Background="{StaticResource TertiaryDark}" Grid.Column="0" 
                                                      HorizontalContentAlignment="Stretch" Grid.IsSharedSizeScope="True" Margin="4,0,0,0">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>

                                                    <Border BorderThickness="0,1,0,0" BorderBrush="Black" SnapsToDevicePixels="True" x:Name="Bd" Background="Transparent">
                                                        <Grid Margin="3,0,0,0">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="auto"/>
                                                                <ColumnDefinition Width="auto" MinWidth="10"/>
                                                                <ColumnDefinition Width="auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                                <RowDefinition Height="16"/>
                                                                <RowDefinition Height="auto" MaxHeight="16"/>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>


                                                            <DockPanel Grid.Column="0" Grid.Row="0">
                                                                <TextBlock Text="{Binding Title}" Style="{StaticResource EpisodeTb}" FontWeight="Medium"></TextBlock>
                                                            </DockPanel>
                                                            <DockPanel Grid.Column="1" Grid.Row="0">
                                                                <TextBlock Text="{Binding PublishDate}" Style="{StaticResource EpisodeTb}"
                                                                               HorizontalAlignment="Right" FontWeight="Medium"></TextBlock>
                                                            </DockPanel>


                                                            <TextBlock Text="{Binding Summary}" TextTrimming="WordEllipsis" VerticalAlignment="Stretch"
                                                                       Grid.Row="1" Grid.RowSpan="2" TextWrapping="WrapWithOverflow" MaxHeight="32"/>

                                                            <DockPanel Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="4" VerticalAlignment="Top" Margin="0,5,0,5">
                                                                <Button Style="{StaticResource PlayButton}"
                                                                        Command="{Binding DataContext.PlayEpisode, RelativeSource={RelativeSource AncestorType=Page, AncestorLevel=1}}" 
                                                                        CommandParameter="{Binding}"/>
                                                                <Button Style="{StaticResource DeleteButton}" HorizontalAlignment="Left" VerticalAlignment="Top"
                                                                        Command="{Binding DataContext.DeleteEpisode, RelativeSource={RelativeSource AncestorType=Page, AncestorLevel=1}}" 
                                                                        CommandParameter="{Binding}"/>
                                                            </DockPanel>

                                                        </Grid>
                                                    </Border>

                                                    <DataTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ButtonHover}"/>
                                                        </Trigger>
                                                    </DataTemplate.Triggers>

                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>


                                    </Expander.Content>


                                </Expander>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region ShowExpanderTemplate für ShowList-->
        <ControlTemplate x:Key="ShowExpanderTemplate" TargetType="{x:Type Expander}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" SnapsToDevicePixels="True">
                <DockPanel>
                    <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" 
                                  Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" 
                                  FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" 
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                  Margin="0" MinWidth="0" MinHeight="0" 
                                  Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        <ToggleButton.FocusVisualStyle>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border>
                                                <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.FocusVisualStyle>
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" 
                                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="0" 
                                                                      RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                    <Path Margin="2,2,0,0" x:Name="PlusSign" Data="M 8 0 L 12 0 L 12 8 L 20 8 L 20 12 L 12 12 L 12 20 L 8 20 L 8 12 L 0 12 L 0 8 L 8 8 Z" 
                                                          Fill="{StaticResource WhiteTranslucent}" Stroke="Black" StrokeThickness="2"/>
                                                </Grid>
                                            </Border>
                                            <!--#region Triggers-->
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="PlusSign" Value="M 0 8 L 20 8 L 20 12 L 0 12 Z"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">

                                                    <Setter Property="Fill" TargetName="PlusSign" Value="White"/>
                                                    <Setter Property="Stroke" TargetName="PlusSign" Value="{StaticResource PrimaryColor}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Opacity" TargetName="PlusSign" Value="0.8"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Fill" TargetName="PlusSign" Value="White"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                            <!--#endregion-->
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </DockPanel>
            </Border>
            <!--#region Triggers-->
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
            <!--#endregion-->
        </ControlTemplate>
        <!--#endregion-->
        <!--#endregion-->

        <!--#region Definitionen für EpisodeListBox-->
        <!--#region EpisodeListBoxStyle für EpisodeListBox-->
        <Style x:Key="EpisodeListStyle" TargetType="{x:Type ListBox}">
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border BorderThickness="0,1,0,0" BorderBrush="Black" SnapsToDevicePixels="True" x:Name="Bd" Background="Transparent">
                            <Grid Margin="3,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto" MinWidth="10"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="16"/>
                                    <RowDefinition Height="auto" MaxHeight="16"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <!--<WrapPanel>-->
                                <DockPanel Grid.Column="0" Grid.Row="0">
                                    <TextBlock x:Name="EpisodeTitle" Text="{Binding Title}" Style="{StaticResource EpisodeTb}" FontWeight="Medium"></TextBlock>
                                </DockPanel>
                                <DockPanel Grid.Column="1" Grid.Row="0">
                                    <TextBlock Text="{Binding PublishDate}" Style="{StaticResource EpisodeTb}"
                                                                               HorizontalAlignment="Right" FontWeight="Medium"></TextBlock>
                                </DockPanel>
                                <!--<DockPanel Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" MinWidth="100" HorizontalAlignment="Left" VerticalAlignment="Stretch">-->

                                <TextBlock Text="{Binding Summary}" TextTrimming="WordEllipsis" VerticalAlignment="Stretch"
                                                                       Grid.Row="1" Grid.RowSpan="2" TextWrapping="WrapWithOverflow" MaxHeight="32"/>
                                <!--</DockPanel>-->
                                <DockPanel Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="4" VerticalAlignment="Top" Margin="0,5,0,5">
                                    <Button Style="{StaticResource PlayButton}" HorizontalAlignment="Left" VerticalAlignment="Top" 
                                            Command="{Binding DataContext.PlayEpisode, RelativeSource={RelativeSource AncestorType=Page, AncestorLevel=1}}" 
                                            CommandParameter="{Binding}"/>
                                    <Button Style="{StaticResource DeleteButton}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                </DockPanel>
                                <!--</WrapPanel>-->
                            </Grid>
                        </Border>

                        <DataTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ButtonHover}"/>
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region EpisodeItemStyle für ShowList-->
        <Style x:Key="EpisodeItems" TargetType="{x:Type ListBoxItem}">
            <!--<Setter Property="Width" Value="150"></Setter>-->
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" Background="White" BorderBrush="White" CornerRadius="0">
                            <ContentPresenter x:Name="ListBoxContent" Margin="0"/>
                        </Border>
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="ListBoxContent" Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="false">
                                <Setter TargetName="ListBoxContent" Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ListBoxContent" Property="Opacity" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="RequestBringIntoView" Handler="ListBoxItem_RequestBringIntoView">
            </EventSetter>
        </Style>
        <!--#endregion-->
        <!--#endregion-->

        <!--#region Definitionen für Suchelement-->
        <!--#region Button Style für Suchelement-->
        <Style x:Key="SearchButton" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" BorderBrush="{StaticResource SecondaryColor}" BorderThickness="1,1,0,1" CornerRadius="2,0,0,2">
                            <Grid Height="20" Width="20" SnapsToDevicePixels="True">
                                <Rectangle x:Name="BackgroundFiller" Fill="{StaticResource SecondaryColor}" Width="20" Height="20" RadiusX="0" RadiusY="0"/>
                                <Ellipse x:Name="Circle" Stroke="{StaticResource PrimaryDark}" StrokeThickness="3" Height="14" Width="14" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="1,1,0,0" SnapsToDevicePixels="True"/>
                                <Line x:Name="Line" Stroke="{StaticResource PrimaryDark}" StrokeThickness="3" X1="17" Y1="19" X2="11" Y2="12" SnapsToDevicePixels="True"/>
                            </Grid>
                        </Border>
                        <!--#region Triggers-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Circle" Property="Opacity" Value="0.8"/>
                                <Setter TargetName="Line" Property="Opacity" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Circle" Property="Opacity" Value="0.6"/>
                                <Setter TargetName="Line" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        <!--#endregion-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region ComboBox Style für Suchelement-->
        <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <!--#region Triggers-->
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="Bd" Value="0.8"/>
                                <Setter Property="Opacity" TargetName="Bd" Value="0.8"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="Bd" Value="0.8"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Tertiary}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="Bd" Value="0.8"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Tertiary}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="Bd" Value="0.8"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                        <!--#endregion-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region ComboBox ControlTemplate für Suchelement-->
        <ControlTemplate x:Key="SearchBarComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                       Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="DropDownBorder" BorderBrush="{StaticResource SecondaryColor}" BorderThickness="1" Background="{StaticResource SecondaryColor}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="ClickMode" Value="Press"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="templateRoot" Background="{StaticResource SecondaryColor}" BorderBrush="{StaticResource SecondaryColor}" BorderThickness="0" SnapsToDevicePixels="True" UseLayoutRounding="True" d:DesignUseLayoutRounding="True">
                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" 
                                                    UseLayoutRounding="True" Width="17" d:DesignUseLayoutRounding="True">
                                                <Path x:Name="arrow" Data="M 2.5 2.5 L 7 10.5 L 11.5 2.5 Z" Fill="{StaticResource PrimaryDark}" HorizontalAlignment="Center" Margin="0" UseLayoutRounding="True" 
                                                      VerticalAlignment="Center" d:DesignUseLayoutRounding="True"/>
                                            </Border>
                                        </Border>
                                        <!--#region templateRoot Triggers-->
                                        <ControlTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <!--<Setter Property="Background" TargetName="templateRoot" Value="White"/>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFABADB3"/>
                                                <Setter Property="Background" TargetName="splitBorder" Value="Transparent"/>
                                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Transparent"/>-->
                                            </MultiDataTrigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <!--<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource SecondaryColor}"/>
                                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource SecondaryColor}"/>-->
                                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.8"/>
                                                <!--<Setter TargetName="templateRoot" Property="Opacity" Value="0.8"/>-->
                                                <!--<Setter TargetName="templateRoot" Property="Background" Value="{StaticResource WindowBackground}"/>
                                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource WindowBackground}"/>
                                                <Setter Property="Fill" TargetName="arrow" Value="gold"/>-->
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                </MultiDataTrigger.Conditions>
                                                <!--<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource SecondaryColor}"/>
                                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource SecondaryColor}"/>-->
                                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.8"/>
                                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.8"/>
                                                <!--<Setter Property="Background" TargetName="templateRoot">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF7EB4EA"/>-->
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.8"/>
                                                <Setter TargetName="templateRoot" Property="Opacity" Value="0.8"/>
                                                <!--<Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource SecondaryColor}"/>
                                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource SecondaryColor}"/>-->
                                            </MultiDataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="arrow" Property="Opacity" Value="0.8"/>
                                            </MultiDataTrigger>
                                        </ControlTemplate.Triggers>
                                        <!--#endregion-->
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="True" Margin="{TemplateBinding Padding}" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <!--#region PopUp Triggers-->
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="False">
                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="True"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                </MultiTrigger>
                <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
            <!--#endregion-->
        </ControlTemplate>
        <!--#endregion-->
        <!--#region TextBox Style für Suchelement-->
        <Style x:Key="SearchTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="CaretBrush" Value="{StaticResource SecondaryColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{StaticResource PrimaryColor}" BorderThickness="{TemplateBinding BorderThickness}" 
                                 SnapsToDevicePixels="True" Background="{StaticResource PrimaryColor}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                              />
                                <Label Content="{TemplateBinding Tag}" Visibility="Collapsed" Focusable="False" IsHitTestVisible="False" Foreground="{StaticResource PrimaryLight}"
                                       Background="Transparent" x:Name="SearchWatermark" Height="{Binding ActualHeight, ElementName=PART_ContentHost}"
                                       FontSize="{Binding FontSize,ElementName=PART_ContentHost}" Padding="2,0,0,0" VerticalContentAlignment="Center" HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                        <!--#region Triggers-->
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsFocused" Value="False" />
                                    <Condition Property="Text" Value="" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Visibility" TargetName="SearchWatermark" Value="Visible" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                            </Trigger>
                        </ControlTemplate.Triggers>
                        <!--#endregion-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#endregion-->


    </Page.Resources>

    <!--#region Page Content-->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="32"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2" Fill="{DynamicResource TertiaryDark}"></Rectangle>
        <Rectangle Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Fill="{StaticResource PrimaryLight}"/>

        <!--#region Content SearchGrid-->
        <Grid Grid.Row="0" Grid.Column="1" Margin="0,5,0,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="1" BorderBrush="Black" BorderThickness="0,0,0,0">
                <Button Style="{StaticResource SearchButton}" HorizontalAlignment="Right" Margin="0,0,0,0" Width="21"
                            Command="{Binding ToggleSearchBarVisibility}"/>
            </Border>
        </Grid>
        <!--#endregion-->
        <!--#region Content ContentGrid-->
        <ListBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Style="{StaticResource ShowListStyle}" ItemsSource="{Binding Podcasts}"
                 ScrollViewer.CanContentScroll="False" ScrollViewer.VerticalScrollBarVisibility="Auto" ItemContainerStyle="{StaticResource ShowItems}"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
        </ListBox>
        <!--#endregion-->
    </Grid>
    <!--#endregion-->

</Page>
