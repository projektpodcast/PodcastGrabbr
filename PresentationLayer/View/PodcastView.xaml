<Page x:Class="PresentationLayer.View.PodcastView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:PresentationLayer.View"
        xmlns:vm="clr-namespace:PresentationLayer.ViewModel"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="AllShowsView">

    <!--<Page.DataContext>
        <local:PodcastViewModel/>
    </Page.DataContext>-->

    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"></BooleanToVisibilityConverter>
        <local:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibility"></local:InvertedBoolToVisibilityConverter>



        


        <Style x:Key="ButtonVLeftTest" TargetType="{x:Type RepeatButton}">
            <Setter Property="Background" Value="#FFBFAAF5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Path Fill="{TemplateBinding Background}"
                            Data="M 0 -20 L 0 20 L -20 0 Z">
                            <!--Data="M 0 0 L 20 50 L 20 -50 Z">-->
                        </Path>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonVRightTest" TargetType="{x:Type RepeatButton}">
            <Setter Property="Background" Value="#FFBFAAF5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Path Fill="{TemplateBinding Background}"
                            Data="M 0 20 L 0 -20 L 20 0 Z">
                            <!--Data="M 0 0 L 20 50 L 20 -50 Z">
                             Data="M -20 50 L -20 -50 L 0 0 Z">-->
                        </Path>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HeadlineTb" TargetType="{x:Type TextBlock}">
            <Setter Property="Opacity" Value="0.7"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="FontSize" Value="10pt"></Setter>
        </Style>

        <ControlTemplate x:Key="ScrollViewerWithButtons2" TargetType="{x:Type ScrollViewer}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="90*"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>

                <RepeatButton Style="{StaticResource ButtonVLeftTest}"
                Grid.Column="0"
                VerticalAlignment="Center"
                              HorizontalAlignment="Right"
                Command="ScrollBar.LineLeftCommand"
                Content="Up" />

                <ScrollContentPresenter
                Grid.Column="1"
                CanContentScroll="{TemplateBinding CanContentScroll}" />

                <RepeatButton Style="{StaticResource ButtonVRightTest}"
                Grid.Column="2"
                VerticalAlignment="Center"
                              HorizontalAlignment="Left"
                Command="ScrollBar.LineRightCommand"
                Content="Down" />
            </Grid>
        </ControlTemplate>


        <Style x:Key="HorizontalStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <ScrollViewer Template="{StaticResource ScrollViewerWithButtons2}" VerticalScrollBarVisibility="Disabled" 
                                      HorizontalScrollBarVisibility="Hidden" CanContentScroll="True" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                            <StackPanel Orientation="Horizontal"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        IsItemsHost="True">

                            </StackPanel>
                        </ScrollViewer>
                    </ControlTemplate>


                </Setter.Value>
            </Setter>


            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="4*"></RowDefinition>
                                <RowDefinition Height="2*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Image Grid.Row="0" Source="{Binding Path=ImageUri}" HorizontalAlignment="Stretch"></Image>
                            <WrapPanel Grid.Row="1" HorizontalAlignment="Center">
                                <TextBlock Text="{Binding Path=PodcastTitle}" HorizontalAlignment="Center" FontSize="10pt" Foreground="White" TextTrimming="CharacterEllipsis" TextWrapping="Wrap"></TextBlock>
                            </WrapPanel>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <SolidColorBrush x:Key="RedBrush" Color="Red" Opacity="0.45"/>
        <SolidColorBrush x:Key="RedBrushBright" Color="Red" Opacity="1"/>


        <Style x:Key="DeleteButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Height="15" Width="auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="WarningBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RadiusX="10" RadiusY="10" 
                                           Height="15" Width="15" Fill="{StaticResource RedBrush}"></Rectangle>
                                <Grid Width="11" Height="11">
                                    <Path Fill="White" Data="M 9 11 L 0 2 L 2 0 L 11 9"/>
                                    <Path Fill="White" Data="M 9 0 L 0 9 L 2 11 L 11 2 Z"/>
                                </Grid>
                                <TextBlock x:Name="ButtonDescription" Text="Show entfernen" Grid.Column="1" Style="{StaticResource HeadlineTb}" 
                                           HorizontalAlignment="Left" VerticalAlignment="Center"
                                           FontSize="13"></TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="WarningBorder" Value="{StaticResource RedBrushBright}"/>
                                <Setter Property="Opacity" TargetName="ButtonDescription" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" TargetName="Bd" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Hidden"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush
    x:Key="TransparentGradient"
    StartPoint="0.5,0"
    EndPoint="0.9,0.9">
            <GradientStop Color="White" Offset="0.71"/>
            <GradientStop Color="Transparent" Offset="0.71"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="GreenBrush" Color="Green" Opacity="0.6"/>
        <SolidColorBrush x:Key="GreenBrushBright" Color="Green" Opacity="1"/>
        <Style x:Key="RefreshButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Height="15" Width="auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="WarningBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RadiusX="10" RadiusY="10" 
                                           Height="15" Width="15" Fill="{StaticResource GreenBrush}"></Rectangle>
                                <Grid Width="15" Height="15">
                                    <!--<Path Fill="White" Data="M 13 15 L 0 2 L 2 0 L 15 13"/>
                                    <Path Fill="White" Data="M 13 0 L 0 13 L 2 15 L 15 2 Z"/>-->
                                    <Path Fill="White" Data="M 15 7.5 L 8 7.5 L 11.5 12.5 Z"></Path>
                                    <!--<Rectangle RadiusX="3" RadiusY="3" Width="8" Height="8" Fill="Green"></Rectangle>-->

                                    <Border CornerRadius="10" Width="11" Height="11" BorderBrush="White" BorderThickness="2" OpacityMask="{StaticResource TransparentGradient}"></Border>
                                </Grid>
                                <TextBlock x:Name="ButtonDescription" Text="Aktualisieren" Grid.Column="1" Style="{StaticResource HeadlineTb}" 
                                           HorizontalAlignment="Left" VerticalAlignment="Center"
                                           FontSize="13"></TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="WarningBorder" Value="{StaticResource GreenBrushBright}"/>
                                <Setter Property="Opacity" TargetName="ButtonDescription" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" TargetName="Bd" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Hidden"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <SolidColorBrush x:Key="GreenBrushPlay" Color="Green" Opacity="1"/>
        <Style x:Key="PlayButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <Rectangle Fill="{StaticResource GreenBrushPlay}" RadiusX="30" RadiusY="30"></Rectangle>
                                <Path Fill="White" Data="M 16 10 L 7 3 L 7 17 Z"/>
                                <!--<Path Fill="White" Data="M 9 11 L 0 2 L 2 0 L 11 9"/>-->
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TestBrush" Color="#FF311855"></SolidColorBrush>
        <SolidColorBrush x:Key="myBrush" Color="#FFBFAAF5" Opacity="1"/>
        <SolidColorBrush x:Key="BlackBrushDownload" Color="Gray" Opacity="1"/>
        <Style x:Key="DownloadButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <Rectangle Fill="{StaticResource TestBrush}" RadiusX="30" RadiusY="30"></Rectangle>
                                <Path Fill="White" Data="M 8 11 L 12 11 L 12 3 L 8 3 Z"></Path>
                                <Path Fill="White" Data="M 10 14 L 16 9 L 4 9 Z"></Path>
                                <Path Fill="White" Data="M 4 17 L 16 17 L 16 15 L 4 15"></Path>
                                <!--<Path Fill="White" Data="M 16 10 L 7 3 L 7 17 Z"/>-->
                                <!--<Path Fill="White" Data="M 9 11 L 0 2 L 2 0 L 11 9"/>-->
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style x:Key="DetailTb" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="VerticalAlignment" Value="Top"></Setter>
            <Setter Property="FontSize" Value="10pt"></Setter>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
        </Style>

        <Style x:Key="ShowItems" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Width" Value="150"></Setter>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" Background="Transparent">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="false">
                                <Setter TargetName="Border" Property="Opacity" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="20,0,20,0"/>
        </Style>

        <ControlTemplate x:Key="ScrollViewerWithButtons" TargetType="{x:Type ScrollViewer}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="90*"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>

                <RepeatButton Style="{StaticResource ButtonVLeftTest}"
                Grid.Column="0"
                VerticalAlignment="Center"
                              HorizontalAlignment="Right"
                Command="ScrollBar.LineLeftCommand"
                Content="Up" />

                <ScrollContentPresenter
                Grid.Column="1"
                CanContentScroll="{TemplateBinding CanContentScroll}" />

                <RepeatButton Style="{StaticResource ButtonVRightTest}"
                Grid.Column="2"
                VerticalAlignment="Center"
                              HorizontalAlignment="Left"
                Command="ScrollBar.LineRightCommand"
                Content="Down" />
            </Grid>
        </ControlTemplate>



        <!--EPISODELISTSTYLE-->
        <!--EPISODELISTSTYLE-->
        <!--EPISODELISTSTYLE-->
        <!--EPISODELISTSTYLE-->
        <Style x:Key="ExpanderStyling" TargetType="{x:Type Expander}">

            <!--<Style.Triggers>
                <Trigger Property="IsExpanded" Value="true">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
                <Trigger Property="IsExpanded" Value="false">
                    <Setter Property="Opacity" Value="0.4"/>
                </Trigger>
            </Style.Triggers>-->
        </Style>




        <Style x:Key="EpisodeListViewStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
            <Setter Property="Focusable" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Top"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Top"></Setter>


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">

                            <GridViewRowPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource myBrush}"/>
                                <Setter Property="Opacity" Value="1"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Black"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource myBrush}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Black"/>
                            </MultiTrigger>

                            <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource myBrush}"/>
                                <Setter Property="Opacity" Value="0.4"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Black"/>
                            </MultiTrigger>-->

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource myBrush}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="Black"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="#FFBFAAF5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>




                    </ControlTemplate>
                </Setter.Value>




            </Setter>



            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Orange"/>
                </Trigger>

                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="false">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="HeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#FF5A5193"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="CustomColumnHeaderControl" TargetType="{x:Type GridViewColumnHeader}">
                        <Grid>
                            <Border x:Name="HeaderBorder" BorderBrush="#FF5A5193" BorderThickness="0" Background="#FF5A5193">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="UpperHighlight" Fill="#FFBFAAF5" Visibility="Collapsed"/>
                                    <Rectangle Fill="#FF5A5193" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Stretch" Margin="-10,0,0,0"></Rectangle>
                                    <Rectangle Fill="#FF5A5193" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Stretch" Margin="0,-10,0,0"></Rectangle>
                                    <Border Padding="0" Grid.RowSpan="2">
                                        <ContentPresenter x:Name="HeaderContent" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    </Border>
                                </Grid>
                            </Border>
                            <Border x:Name="HeaderHoverBorder" BorderThickness="0" Margin="0"/>
                            <Border x:Name="HeaderPressBorder" BorderThickness="0" Margin="0"/>
                            <Canvas>
                                <Thumb x:Name="PART_HeaderGripper">
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Canvas.Right" Value="-9"/>
                                            <Setter Property="Width" Value="18"/>
                                            <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Setter Property="Padding" Value="7"/>
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                        <GradientStop Color="#FFBFAAF5" Offset="0"/>
                                                        <GradientStop Color="#FFBFAAF5" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border Background="Transparent" Padding="0">
                                                            <Rectangle Fill="{TemplateBinding Background}" Opacity="0.7" HorizontalAlignment="Center" Width="1"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="HeaderBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#FFBFAAF5" Offset="0"/>
                                            <GradientStop Color="#FFBFAAF5" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FFBFAAF5"/>
                                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                <!--<Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="HeaderBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#FFBFAAF5" Offset="0"/>
                                            <GradientStop Color="#FFBFAAF5" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FFBFAAF5"/>
                                <Setter Property="BorderBrush" TargetName="HeaderPressBorder" Value="#FFBFAAF5"/>
                                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                <Setter Property="Fill" TargetName="UpperHighlight" Value="#FFBFAAF5"/>
                                <!--<Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>-->
                                <Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>
            <!--<Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="40"/>-->
            <!--<Style.Triggers>-->
            <!--<Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF5A5193"/>
                </Trigger>-->
            <!--<Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#FF5A5193"/>
                    <Setter Property="BorderBrush" Value="#FF88CBEB"/>
                    <Setter Property="Visibility" Value="Visible"/>
                </Trigger>
            </Style.Triggers>-->

        </Style>

        <Style x:Key="HeaderStyleNonresizeable" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#FF5A5193"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="CustomColumnHeaderControl" TargetType="{x:Type GridViewColumnHeader}">
                        <Grid>
                            <Border x:Name="HeaderBorder" BorderBrush="#FF5A5193" BorderThickness="0" Background="#FF5A5193">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="UpperHighlight" Fill="#FFBFAAF5" Visibility="Collapsed"/>
                                    <Rectangle Fill="#FF5A5193" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Stretch" Margin="-10,0,0,0"></Rectangle>
                                    <Rectangle Fill="#FF5A5193" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Stretch" Margin="0,-10,0,0"></Rectangle>
                                    <Border Padding="0" Grid.RowSpan="2">
                                        <ContentPresenter x:Name="HeaderContent" 
                                                          ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                          Margin="0,0,0,1" RecognizesAccessKey="True" 
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                          VerticalAlignment="Center"
                                                          />
                                    </Border>
                                </Grid>
                            </Border>
                            <Border x:Name="HeaderHoverBorder" BorderThickness="0" Margin="0"/>
                            <Border x:Name="HeaderPressBorder" BorderThickness="0" Margin="0"/>
                            <Canvas>
                                <Thumb x:Name="PART_HeaderGripper">
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Canvas.Right" Value="-9"/>
                                            <Setter Property="Width" Value="18"/>
                                            <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Setter Property="Padding" Value="7"/>
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                        <GradientStop Color="#FFBFAAF5" Offset="0"/>
                                                        <GradientStop Color="#FFBFAAF5" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border Background="Transparent" Padding="0">
                                                            <Rectangle Fill="{TemplateBinding Background}" Opacity="0.7" HorizontalAlignment="Center" Width="1"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="HeaderBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#FFBFAAF5" Offset="0"/>
                                            <GradientStop Color="#FFBFAAF5" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FFBFAAF5"/>
                                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                <!--<Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="HeaderBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#FFBFAAF5" Offset="0"/>
                                            <GradientStop Color="#FFBFAAF5" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FFBFAAF5"/>
                                <Setter Property="BorderBrush" TargetName="HeaderPressBorder" Value="#FFBFAAF5"/>
                                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                <Setter Property="Fill" TargetName="UpperHighlight" Value="#FFBFAAF5"/>
                                <!--<Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>-->
                                <Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0"/>
                            </Trigger>
                            <Trigger Property="Height" Value="Auto">
                                <Setter Property="MinHeight" Value="20"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>
            <!--<Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="40"/>-->
            <!--<Style.Triggers>-->
            <!--<Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF5A5193"/>
                </Trigger>-->
            <!--<Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#FF5A5193"/>
                    <Setter Property="BorderBrush" Value="#FF88CBEB"/>
                    <Setter Property="Visibility" Value="Visible"/>
                </Trigger>
            </Style.Triggers>-->

        </Style>

    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50*" MaxHeight="380" MinHeight="200"></RowDefinition>
            <RowDefinition Height="40*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" ShowGridLines="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"></RowDefinition>
                <RowDefinition Height="20*" MinHeight="100"></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Rectangle Grid.Row="0" Grid.RowSpan="2" Fill="#FF5A5193" />
            <ListBox Name="showViewList" Grid.Row="1" BorderThickness="0" Background="Black" HorizontalAlignment="Stretch"
                     VerticalAlignment="Center" ItemContainerStyle="{StaticResource ShowItems}" 
                     Style="{StaticResource HorizontalStyle}" ItemsSource="{Binding AllShows, Mode=OneWay}"
                     SelectedItem="{Binding SelectedShow}">
            </ListBox>
            <!--<Rectangle Grid.Row="0" Fill="Black" Height="20"></Rectangle>-->
            <!--ShowViewList-->
            <Rectangle Grid.Row="2" Fill="#463574"></Rectangle>
            <Grid Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition Width="10*"></ColumnDefinition>
                    <ColumnDefinition Width="10*"></ColumnDefinition>
                    <ColumnDefinition Width="20*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="15" MaxHeight="100"></RowDefinition>
                    <RowDefinition Height="20" MaxHeight="100"></RowDefinition>
                    <RowDefinition Height="15" MaxHeight="100"></RowDefinition>
                    <RowDefinition Height="20" MaxHeight="100"></RowDefinition>
                    <!--<RowDefinition Height="15" MaxHeight="100"></RowDefinition>
                    <RowDefinition Height="20" MaxHeight="100"></RowDefinition>-->
                </Grid.RowDefinitions>
                <Rectangle Grid.ColumnSpan="7" Grid.RowSpan="8" Fill="#FF311855" Opacity="0.5"></Rectangle>
                <TextBlock Grid.Column="1" Grid.Row="0" Style="{StaticResource HeadlineTb}">Publisher</TextBlock>
                <TextBlock Grid.Column="1" Grid.Row="1" Style="{StaticResource DetailTb}" TextWrapping="NoWrap" Text="{Binding SelectedShow.PublisherName}"></TextBlock>
                <TextBlock Grid.Column="2" Grid.Row="0" Style="{StaticResource HeadlineTb}">Podcast-Titel</TextBlock>
                <TextBlock Grid.Column="2" Grid.Row="1" Style="{StaticResource DetailTb}" TextWrapping="NoWrap" Text="{Binding SelectedShow.PodcastTitle}"></TextBlock>
                <TextBlock Grid.Column="3" Grid.Row="0" Style="{StaticResource HeadlineTb}">Beschreibung</TextBlock>
                <TextBlock Grid.Column="3" Grid.Row="1" Grid.RowSpan="3" Style="{StaticResource DetailTb}" TextWrapping="Wrap" Text="{Binding SelectedShow.Description}"></TextBlock>
                <TextBlock Grid.Column="1" Grid.Row="2" Style="{StaticResource HeadlineTb}">Letztes Update</TextBlock>
                <TextBlock Grid.Column="1" Grid.Row="3" Style="{StaticResource DetailTb}" TextWrapping="NoWrap" Text="{Binding SelectedShow.LastUpdated}"></TextBlock>
                <Grid Grid.Row="3" Grid.Column="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Style="{StaticResource RefreshButton}" Grid.Column="0"
                    HorizontalAlignment="Right" VerticalAlignment="Stretch" Margin="0,0,10,0" Command="{Binding RefreshSelectedPodcast}"></Button>
                    <Button Style="{StaticResource DeleteButton}" Grid.Column="2"
                    HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0,0,10,0" Command="{Binding DeleteSelectedPodcast}"></Button>
                </Grid>

            </Grid>
        </Grid>

        <Rectangle Grid.Row="1" Fill="#FF5A5193"></Rectangle>
        <!--<Button Style="{StaticResource DownloadButton}"></Button>-->
        <ListView BorderThickness="0" SelectionMode="Single" x:Name="EpisodeList" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                  ItemContainerStyle="{StaticResource EpisodeListViewStyle}" BorderBrush="#FFBFAAF5" Foreground="Black"
                  SizeChanged="HeaderContent_SizeChanged"
                  Loaded="ListView_Loaded" ItemsSource="{Binding EpisodesCollection}">
            <ListView.View>
                <GridView ColumnHeaderContainerStyle="{StaticResource HeaderStyleNonresizeable}" AllowsColumnReorder="False">
                    <GridViewColumn Width="30">
                        <GridViewColumnHeader Style="{StaticResource HeaderStyleNonresizeable}"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Expander Margin="-5,2,-5000,0" HorizontalAlignment="Left" Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ItemsPresenter}}}"
                                         x:Name="lvExpander"
                                          VerticalAlignment="Center"
                                          Style="{StaticResource ExpanderStyling}"
                                          Foreground="Black"
                                    IsExpanded="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem, Mode=FindAncestor}}">
                                    <GroupBox Header="Beschreibung" VerticalAlignment="Top" Foreground="#FF311855" BorderThickness="0.5,0,0,0" BorderBrush="#FF311855">
                                        <TextBlock Text="{Binding Summary}" FontWeight="Normal" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Foreground="Black" MaxWidth="800" HorizontalAlignment="Left"/>
                                    </GroupBox>
                                </Expander>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn>
                        <GridViewColumnHeader Content="Titel" Style="{StaticResource HeaderStyleNonresizeable}"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Margin="0,5,0,0" TextAlignment="Left" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Text="{Binding Title}" Foreground="Black">
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="auto">
                        <GridViewColumnHeader Content="Datum" Style="{StaticResource HeaderStyleNonresizeable}" HorizontalContentAlignment="Center"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Margin="0,5,0,0" TextAlignment="Left" VerticalAlignment="Center" Foreground="Black" Text="{Binding PublishDate}" Padding="0,0,8,0">
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="auto">
                        <GridViewColumnHeader Content="Media" Style="{StaticResource HeaderStyleNonresizeable}" HorizontalContentAlignment="Center"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border Padding="0,0,8,0" BorderThickness="0">
                                    <WrapPanel HorizontalAlignment="Center">
                                        <Button Margin="0,3,0,0" VerticalAlignment="Center" Content="Download" Command="{Binding DownloadMedia}"
                                                Visibility="{Binding Path=IsDownloaded, Converter={StaticResource InvertedBoolToVisibility}}" Style="{StaticResource DownloadButton}"/>
                                        <Button Margin="0,3,0,0" VerticalAlignment="Center" Content="Play" Command="{Binding PlayMedia}"
                                                Visibility="{Binding Path=IsDownloaded, Converter={StaticResource BoolToVisibility}}" Style="{StaticResource PlayButton}"/>
                                    </WrapPanel>
                                </Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

    </Grid>
</Page>
